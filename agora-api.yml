---
# BASIC GO SETUP

- name: Agora API setup
  sudo: true
  sudo_user: agoraapi
  lineinfile: dest=/home/agoraapi/.bashrc line="{{ item }}"
  with_items:
    - "export GOPATH=$HOME/go"
    - "export PATH=$GOPATH/bin:$PATH"
    - "export GOBIN=$GOPATH/bin"

- name: Agora API
  sudo: true
  sudo_user: agoraapi
  shell: go get {{ item }}
  with_items:
    - bitbucket.org/liamstask/goose/cmd/goose
    - github.com/agoravoting/agora-api
  environment:
    GOPATH: /home/agoraapi/go
    PATH: /home/agoraapi/go/bin:/usr/bin
    GOBIN: /home/agoraapi/go/bin

# DATABASE

- name: Agora API database user
  sudo: true
  sudo_user: postgres
  postgresql_user: name=ballotbox password=ballotbox port=5432

- name: Agora API database
  sudo: true
  sudo_user: postgres
  postgresql_db: name=ballotbox owner=ballotbox

- name: Agora API db creationg
  sudo: true
  sudo_user: agoraapi
  shell: goose up
  args:
    chdir: /home/agoraapi/go/src/github.com/agoravoting/agora-api/
  environment:
    GOPATH: /home/agoraapi/go
    PATH: /home/agoraapi/go/bin:/usr/bin
    GOBIN: /home/agoraapi/go/bin

# ADMIN

- name: Agora API Admin venv
  sudo: true
  sudo_user: agoraapi
  pip: requirements=/home/agoraapi/go/src/github.com/agoravoting/agora-api/admin/requirements.txt virtualenv=/home/agoraapi/venv state=present

- name: Agora API Admin venv in bashrc
  sudo: true
  sudo_user: agoraapi
  lineinfile: dest=/home/agoraapi/.bashrc line="{{ item }}"
  with_items:
    - "source $HOME/venv/bin/activate"

# LINKS

- name: Agora API links
  sudo: true
  sudo_user: agoraapi
  file: src=/home/agoraapi/go/src/github.com/agoravoting/agora-api dest=/home/agoraapi/agora-api state=link

# SUPERVISOR

- name: Agora API supervisor file
  sudo: true
  template: src=templates/agora-api/{{item.f}} dest={{ item.dest }} owner={{ item.owner }} mode={{ item.mode }}
  with_items:
    - { f: agora-api.conf, dest: /etc/supervisor/conf.d/agora-api.conf, owner: "root", mode: "0644" }

- name: restarting supervisor
  sudo: true
  service: name=supervisor state=restarted
